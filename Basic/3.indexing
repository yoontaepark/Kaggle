# 3.indexing

**암기




- ndarray에서 데이터 세트 선택: 인덱싱(indexing)
Slicing, Fancy Indexing, Boolean Indexing(중요!!)

- 단일값을 가지고 오려면 변수[숫자] 를 넣으면 된다, 맨뒤는 변수[-1], 그 앞은 변수[-2] 이순서
- 2차원의 경우 변수[0,0], 변수[0,1] .. 이런식으로 추출하면 된다 

- 슬라이싱: ':" 을 이용하여 연속된 값을 선택
  ex) 변수[:] : 배열 전체, 배열[:3] : 3미만, 그러니까 0,1,2번 배열 
      변수[3:] : 3이상, 3번 배열부터 끝까지, 배열[0:3] : 0이상 3미만, 0,1,2번 배열  
      ** 3x3 2차원 배열이라고 하면, 
      변수[0:2, 0:2] = (0,0), (0,1), (1,0), (1,1)
      변수[1:3, 0:3] = (1,0), (1,1), (1,2), (2,0), (2,1), (2,2)
      변수[1:3, :] = (1,0), (1,1), (1,2), (2,0), (2,1), (2,2)
      변수[:, :] = 전체
      변수[:2, 1:] = (0,1), (0,2), (1,1), (1,2)
      변수[:2, 0] = (0,0), (1,0) //열에는 명확하게 0만 고르기

- 팬시 인댁싱(Fancy Indexing): 리스트나 ndarray로 인덱스 집합을 지정하면 해당 위치의 인덱스에 해당하는 ndarray를 반환하는 인덱싱 방식
  ex) 변수[[2,4,7]] = 리스트의 2번, 4번, 7번 값을 추출한다. 
  ** 3x3 2차원 배열이라고 하면, 
  변수[[0,1],2] = (0,2), (1,2)
  변수[[0,1], 0:2] = (0,0), (0,1), (1,0), (1,1)
  변수[[0,1]] = 비었다는거는 다 포함해라라는 뜻, (0,0), (0,1), (0,2), (1,0), (1,1), (1,2) 
  
- 불린 인덱싱(Boolean indexing): 조건 필터링과 검색을 동시에 할 수 있음(많이많이씀)
ex) ndarray 내의 값이 5보다 큰 ndarray를 추출하고 싶다면? array1[array1>5] 이런식으로 쓰면 됨


- 실습
[1] # 범위를 줘서 array 생성 후, 특정 위치 인덱싱하면 됨
